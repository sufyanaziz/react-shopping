[{"D:\\Programming\\try-typescript\\react-shopping\\src\\App.tsx":"1","D:\\Programming\\try-typescript\\react-shopping\\src\\index.tsx":"2","D:\\Programming\\try-typescript\\react-shopping\\src\\context\\store-context.tsx":"3","D:\\Programming\\try-typescript\\react-shopping\\src\\components\\Button.tsx":"4","D:\\Programming\\try-typescript\\react-shopping\\src\\components\\Card.tsx":"5","D:\\Programming\\try-typescript\\react-shopping\\src\\components\\Navbar.tsx":"6","D:\\Programming\\try-typescript\\react-shopping\\src\\components\\SidebarCart.tsx":"7","D:\\Programming\\try-typescript\\react-shopping\\src\\components\\Container.tsx":"8"},{"size":2917,"mtime":1611760967510,"results":"9","hashOfConfig":"10"},{"size":337,"mtime":1611643090724,"results":"11","hashOfConfig":"10"},{"size":3243,"mtime":1611668019475,"results":"12","hashOfConfig":"10"},{"size":876,"mtime":1611759625871,"results":"13","hashOfConfig":"10"},{"size":1178,"mtime":1611759859275,"results":"14","hashOfConfig":"10"},{"size":957,"mtime":1611760035978,"results":"15","hashOfConfig":"10"},{"size":4120,"mtime":1611760679349,"results":"16","hashOfConfig":"10"},{"size":826,"mtime":1611761006870,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ur8598",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Programming\\try-typescript\\react-shopping\\src\\App.tsx",["35","36","37"],"D:\\Programming\\try-typescript\\react-shopping\\src\\index.tsx",[],"D:\\Programming\\try-typescript\\react-shopping\\src\\context\\store-context.tsx",["38"],"import { useState } from \"react\";\r\nimport { createContext, useContext } from \"react\";\r\nimport { contextStore, productType } from \"../@types/context-type\";\r\n\r\nconst Context = createContext({} as contextStore);\r\n\r\nexport const StoreProvider: React.FC = ({ children }) => {\r\n  const [products, setProducts] = useState<productType[]>([]);\r\n  const [product, setProduct] = useState<productType>({} as productType);\r\n  const [cart, setCart] = useState<productType[]>([]);\r\n\r\n  const getProducts = async () => {\r\n    try {\r\n      const api = await fetch(\"https://fakestoreapi.com/products\");\r\n      const data = await api.json();\r\n\r\n      const tempProduct = [...data];\r\n      tempProduct.map(list => {\r\n        list.inCart = false;\r\n        list.amount = 0;\r\n        list.total = list.price;\r\n      });\r\n\r\n      setProducts(tempProduct);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getProduct = async (id: number) => {\r\n    try {\r\n      const api = await fetch(`https://fakestoreapi.com/products/${id}`);\r\n      const data = await api.json();\r\n      setProduct(data);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const productToCart = (_product: productType) => {\r\n    const tempProduct = { ..._product };\r\n    tempProduct.amount = 1;\r\n    tempProduct.inCart = true;\r\n\r\n    updateProducts(_product);\r\n\r\n    setCart([...cart, tempProduct]);\r\n  };\r\n\r\n  const updateProducts = (list: productType) => {\r\n    const findIndex = products.findIndex(prod => prod.id === list.id);\r\n    const tempProduct = [...products];\r\n    tempProduct[findIndex].inCart = true;\r\n    tempProduct[findIndex].amount = 1;\r\n\r\n    setProducts(tempProduct);\r\n  };\r\n\r\n  const handleIncrease = (id: number) => {\r\n    const tempCart = [...cart];\r\n    const findIndexCart = tempCart.findIndex(list => list.id === id);\r\n    tempCart[findIndexCart].amount += 1;\r\n    tempCart[findIndexCart].total =\r\n      tempCart[findIndexCart].price * tempCart[findIndexCart].amount;\r\n\r\n    setCart(tempCart);\r\n  };\r\n  const handleDecrease = (id: number) => {\r\n    const tempCart = [...cart];\r\n    const findIndexCart = tempCart.findIndex(list => list.id === id);\r\n    tempCart[findIndexCart].amount -= 1;\r\n    tempCart[findIndexCart].total =\r\n      tempCart[findIndexCart].price * tempCart[findIndexCart].amount;\r\n\r\n    if (tempCart[findIndexCart].amount === 0) {\r\n      const tempProducts = [...products];\r\n      const findIndexProduct = tempProducts.findIndex(list => list.id === id);\r\n      tempProducts[findIndexProduct].inCart = false;\r\n      tempProducts[findIndexProduct].amount = 1;\r\n      tempProducts[findIndexProduct].total =\r\n        tempProducts[findIndexProduct].price;\r\n\r\n      const removeProductFromCart = tempCart.filter(list => list.id !== id);\r\n\r\n      setProducts(tempProducts);\r\n      setCart(removeProductFromCart);\r\n    } else {\r\n      setCart(tempCart);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        products,\r\n        product,\r\n        cart,\r\n        event: {\r\n          getProducts,\r\n          getProduct,\r\n          productToCart,\r\n          handleIncrease,\r\n          handleDecrease,\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport const useStore = () => useContext(Context);\r\n","D:\\Programming\\try-typescript\\react-shopping\\src\\components\\Button.tsx",[],"D:\\Programming\\try-typescript\\react-shopping\\src\\components\\Card.tsx",[],"D:\\Programming\\try-typescript\\react-shopping\\src\\components\\Navbar.tsx",[],"D:\\Programming\\try-typescript\\react-shopping\\src\\components\\SidebarCart.tsx",["39"],"D:\\Programming\\try-typescript\\react-shopping\\src\\components\\Container.tsx",[],{"ruleId":"40","severity":1,"message":"41","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":14},{"ruleId":"44","severity":1,"message":"45","line":22,"column":6,"nodeType":"46","endLine":22,"endColumn":8,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":64,"column":21,"nodeType":"50","endLine":67,"endColumn":23},{"ruleId":"51","severity":1,"message":"52","line":18,"column":28,"nodeType":"53","messageId":"54","endLine":18,"endColumn":30},{"ruleId":"48","severity":1,"message":"49","line":60,"column":19,"nodeType":"50","endLine":60,"endColumn":43},"@typescript-eslint/no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'event'. Either include it or remove the dependency array.","ArrayExpression",["55"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"56","fix":"57"},"Update the dependencies array to be: [event]",{"range":"58","text":"59"},[602,604],"[event]"]
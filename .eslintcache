[{"D:\\Programming\\try-typescript\\react-shopping\\src\\App.tsx":"1","D:\\Programming\\try-typescript\\react-shopping\\src\\index.tsx":"2","D:\\Programming\\try-typescript\\react-shopping\\src\\context\\store-context.tsx":"3","D:\\Programming\\try-typescript\\react-shopping\\src\\components\\Button.tsx":"4","D:\\Programming\\try-typescript\\react-shopping\\src\\components\\Card.tsx":"5","D:\\Programming\\try-typescript\\react-shopping\\src\\components\\Navbar.tsx":"6","D:\\Programming\\try-typescript\\react-shopping\\src\\components\\SidebarCart.tsx":"7","D:\\Programming\\try-typescript\\react-shopping\\src\\components\\Container.tsx":"8"},{"size":3407,"mtime":1611825001389,"results":"9","hashOfConfig":"10"},{"size":337,"mtime":1611643090724,"results":"11","hashOfConfig":"10"},{"size":3243,"mtime":1611668019475,"results":"12","hashOfConfig":"10"},{"size":876,"mtime":1611759625871,"results":"13","hashOfConfig":"10"},{"size":1178,"mtime":1611759859275,"results":"14","hashOfConfig":"10"},{"size":957,"mtime":1611760035978,"results":"15","hashOfConfig":"10"},{"size":4120,"mtime":1611760679349,"results":"16","hashOfConfig":"10"},{"size":826,"mtime":1611761006870,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ur8598",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Programming\\try-typescript\\react-shopping\\src\\App.tsx",["36","37","38"],"D:\\Programming\\try-typescript\\react-shopping\\src\\index.tsx",[],"D:\\Programming\\try-typescript\\react-shopping\\src\\context\\store-context.tsx",["39"],"import { useState } from \"react\";\r\nimport { createContext, useContext } from \"react\";\r\nimport { contextStore, productType } from \"../@types/context-type\";\r\n\r\nconst Context = createContext({} as contextStore);\r\n\r\nexport const StoreProvider: React.FC = ({ children }) => {\r\n  const [products, setProducts] = useState<productType[]>([]);\r\n  const [product, setProduct] = useState<productType>({} as productType);\r\n  const [cart, setCart] = useState<productType[]>([]);\r\n\r\n  const getProducts = async () => {\r\n    try {\r\n      const api = await fetch(\"https://fakestoreapi.com/products\");\r\n      const data = await api.json();\r\n\r\n      const tempProduct = [...data];\r\n      tempProduct.map(list => {\r\n        list.inCart = false;\r\n        list.amount = 0;\r\n        list.total = list.price;\r\n      });\r\n\r\n      setProducts(tempProduct);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const getProduct = async (id: number) => {\r\n    try {\r\n      const api = await fetch(`https://fakestoreapi.com/products/${id}`);\r\n      const data = await api.json();\r\n      setProduct(data);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const productToCart = (_product: productType) => {\r\n    const tempProduct = { ..._product };\r\n    tempProduct.amount = 1;\r\n    tempProduct.inCart = true;\r\n\r\n    updateProducts(_product);\r\n\r\n    setCart([...cart, tempProduct]);\r\n  };\r\n\r\n  const updateProducts = (list: productType) => {\r\n    const findIndex = products.findIndex(prod => prod.id === list.id);\r\n    const tempProduct = [...products];\r\n    tempProduct[findIndex].inCart = true;\r\n    tempProduct[findIndex].amount = 1;\r\n\r\n    setProducts(tempProduct);\r\n  };\r\n\r\n  const handleIncrease = (id: number) => {\r\n    const tempCart = [...cart];\r\n    const findIndexCart = tempCart.findIndex(list => list.id === id);\r\n    tempCart[findIndexCart].amount += 1;\r\n    tempCart[findIndexCart].total =\r\n      tempCart[findIndexCart].price * tempCart[findIndexCart].amount;\r\n\r\n    setCart(tempCart);\r\n  };\r\n  const handleDecrease = (id: number) => {\r\n    const tempCart = [...cart];\r\n    const findIndexCart = tempCart.findIndex(list => list.id === id);\r\n    tempCart[findIndexCart].amount -= 1;\r\n    tempCart[findIndexCart].total =\r\n      tempCart[findIndexCart].price * tempCart[findIndexCart].amount;\r\n\r\n    if (tempCart[findIndexCart].amount === 0) {\r\n      const tempProducts = [...products];\r\n      const findIndexProduct = tempProducts.findIndex(list => list.id === id);\r\n      tempProducts[findIndexProduct].inCart = false;\r\n      tempProducts[findIndexProduct].amount = 1;\r\n      tempProducts[findIndexProduct].total =\r\n        tempProducts[findIndexProduct].price;\r\n\r\n      const removeProductFromCart = tempCart.filter(list => list.id !== id);\r\n\r\n      setProducts(tempProducts);\r\n      setCart(removeProductFromCart);\r\n    } else {\r\n      setCart(tempCart);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        products,\r\n        product,\r\n        cart,\r\n        event: {\r\n          getProducts,\r\n          getProduct,\r\n          productToCart,\r\n          handleIncrease,\r\n          handleDecrease,\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport const useStore = () => useContext(Context);\r\n","D:\\Programming\\try-typescript\\react-shopping\\src\\components\\Button.tsx",[],"D:\\Programming\\try-typescript\\react-shopping\\src\\components\\Card.tsx",[],"D:\\Programming\\try-typescript\\react-shopping\\src\\components\\Navbar.tsx",[],"D:\\Programming\\try-typescript\\react-shopping\\src\\components\\SidebarCart.tsx",["40"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { AiOutlineCloseCircle } from \"react-icons/ai\";\r\nimport { productType } from \"../@types/context-type\";\r\n\r\ninterface Props {\r\n  className?: string;\r\n  style?: React.CSSProperties | undefined;\r\n  isOpenSidebar: boolean;\r\n  onClick?:\r\n    | ((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void)\r\n    | undefined;\r\n  openSidebar: React.Dispatch<React.SetStateAction<boolean>>;\r\n  cart: productType[];\r\n  event: {\r\n    handleDecrease: (id: number) => void;\r\n    handleIncrease: (id: number) => void;\r\n  };\r\n}\r\n\r\nconst SidebarCart: React.FC<Props> = ({\r\n  className,\r\n  style,\r\n  isOpenSidebar,\r\n  onClick,\r\n  openSidebar,\r\n  cart,\r\n  event,\r\n}) => {\r\n  // Calculate Total Purchase\r\n  const calculateTotal = (items: productType[]) =>\r\n    items\r\n      .reduce((ack: number, item) => ack + item.amount * item.price, 0)\r\n      .toFixed(2);\r\n\r\n  return (\r\n    <SideCartComponent\r\n      openComponent={isOpenSidebar}\r\n      className={className}\r\n      style={style}\r\n      onClick={onClick}\r\n    >\r\n      <div className=\"icons\">\r\n        <AiOutlineCloseCircle onClick={() => openSidebar(false)} />\r\n      </div>\r\n      {cart.length === 0 ? (\r\n        <div className=\"side-component-container\">\r\n          <p>Product not found, purchase one!</p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"side-component-container\">\r\n          <p style={{ marginBottom: 20 }}>\r\n            Total Purchase : ${calculateTotal(cart)}\r\n          </p>\r\n          {cart.map(item => {\r\n            return (\r\n              <div className=\"side-component-card\" key={item.id}>\r\n                <div className=\"side-component-image\">\r\n                  <img src={item.image} />\r\n                </div>\r\n                <div className=\"side-component-details\">\r\n                  <div\r\n                    className=\"side-component-title\"\r\n                    style={{ marginBottom: 10 }}\r\n                  >\r\n                    <p>{item.title}</p>\r\n                  </div>\r\n                  <div\r\n                    className=\"side-component-amount\"\r\n                    style={{ marginBottom: 10 }}\r\n                  >\r\n                    <p>\r\n                      ${item.total} ({item.amount})\r\n                    </p>\r\n                  </div>\r\n                  <div\r\n                    className=\"side-component-action\"\r\n                    style={{ marginBottom: 10 }}\r\n                  >\r\n                    <button onClick={() => event.handleDecrease(item.id)}>\r\n                      -\r\n                    </button>\r\n                    <button onClick={() => event.handleIncrease(item.id)}>\r\n                      +\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </SideCartComponent>\r\n  );\r\n};\r\n\r\ntype SideCartComponentType = {\r\n  openComponent: boolean;\r\n};\r\n\r\nconst SideCartComponent = styled.div<SideCartComponentType>`\r\n  position: fixed;\r\n  color: white;\r\n  z-index: 10;\r\n  right: ${props => (props.openComponent ? \"0px\" : \"-400px\")};\r\n  transition: all 0.5s ease-out;\r\n  width: 400px;\r\n  background: white;\r\n  height: 100vh;\r\n\r\n  .icons {\r\n    padding: 20px 20px 0 0;\r\n    color: #222831;\r\n    font-size: 40px;\r\n    cursor: pointer;\r\n    float: right;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  .side-component-container {\r\n    padding: 10px 20px;\r\n    height: 500px;\r\n    width: 100%;\r\n    overflow-y: auto;\r\n    color: #222831;\r\n  }\r\n\r\n  .side-component-card {\r\n    display: flex;\r\n    margin-bottom: 10px;\r\n    border-bottom: 1px solid black;\r\n  }\r\n\r\n  .side-component-image img {\r\n    width: 100px;\r\n    height: auto;\r\n  }\r\n\r\n  .side-component-details {\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  button {\r\n    border: none;\r\n    background: #222831;\r\n    color: #eee;\r\n    padding: 10px 14px;\r\n    margin-right: 10px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media screen and (max-width: 500px) {\r\n    right: ${props => (props.openComponent ? \"-16px\" : \"-400px\")};\r\n  }\r\n`;\r\n\r\nexport default SidebarCart;\r\n","D:\\Programming\\try-typescript\\react-shopping\\src\\components\\Container.tsx",[],{"ruleId":"41","severity":1,"message":"42","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":14},{"ruleId":"45","severity":1,"message":"46","line":24,"column":6,"nodeType":"47","endLine":24,"endColumn":8,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":79,"column":21,"nodeType":"51","endLine":82,"endColumn":23},{"ruleId":"52","severity":1,"message":"53","line":18,"column":28,"nodeType":"54","messageId":"55","endLine":18,"endColumn":30},{"ruleId":"49","severity":1,"message":"50","line":60,"column":19,"nodeType":"51","endLine":60,"endColumn":43},"@typescript-eslint/no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'event'. Either include it or remove the dependency array.","ArrayExpression",["56"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"57","fix":"58"},"Update the dependencies array to be: [event]",{"range":"59","text":"60"},[691,693],"[event]"]